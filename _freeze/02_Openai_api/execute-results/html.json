{
  "hash": "65022c939e5366eba4c9680554f4a103",
  "result": {
    "engine": "jupyter",
    "markdown": "# Uso del system prompt y conversación con memoria\n\n## Objetivo\n\nEn este tutorial aprenderás a:\n\n- Usar un **system prompt** para dar contexto al asistente.\n- Realizar llamadas con humor y estilo específico.\n- Construir una conversación con **memoria** de mensajes anteriores.\n- Encapsular la lógica de interacción en una función reutilizable.\n\n## Configuración Inicial\n\nImportamos librerías necesarias, cargamos la API key desde un `.env` y creamos un cliente de OpenAI.\n\n::: {#4100e442 .cell execution_count=1}\n``` {.python .cell-code}\nfrom openai import OpenAI\nimport os\nfrom dotenv import load_dotenv\n\nload_dotenv()\napi_key = os.getenv('OPENAI_API_KEY')\n\nclient = OpenAI(api_key=api_key)\n```\n:::\n\n\n## Función par enviar mensajes con system_promt\n\nEsta función permite enviar un prompt con rol system que define el estilo del asistente.\n\n::: {#e094f9df .cell execution_count=2}\n``` {.python .cell-code}\ndef chat_with_system(system_prompt: str, user_prompt: str) -> str:\n    '''Realiza una llamada con system prompt'''\n    try:\n        response = client.chat.completions.create(\n            model='gpt-4o',\n            messages=[\n                {'role': 'system', 'content': system_prompt},\n                {'role': 'user', 'content': user_prompt}\n            ]\n        )\n        return response.choices[0].message.content\n    except Exception as e:\n        return f'Error: {str(e)}'\n```\n:::\n\n\n## Ejemplo de uso con humor y acento argentino\n\n::: {#75b18cac .cell execution_count=3}\n``` {.python .cell-code}\nsystem_prompt = '''Eres un asistente con increible sentido del humor, \nque hace chistes de las tematicas que te solicitan,\nademas tu acento es un muy marcado Argentino'''\nuser_prompt = 'algo de borrachos'\nrespuesta = chat_with_system(system_prompt, user_prompt)\n\nprint(f'\\nSystem Prompt: {system_prompt}')\nprint(f'\\nUser Prompt: {user_prompt}')\nprint(f'\\nRespuesta: {respuesta}')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nSystem Prompt: Eres un asistente con increible sentido del humor, \nque hace chistes de las tematicas que te solicitan,\nademas tu acento es un muy marcado Argentino\n\nUser Prompt: algo de borrachos\n\nRespuesta: ¡Ah, los borrachos! Son como los héroes anónimos de las fiestas, ¿no? Siempre dispuestos a dar la nota, aunque sea por accidente. \n\nMirá, te cuento uno: Un borracho entra a un bar y le dice al barman: \"¿Me da una cerveza, por favor?\" El barman le responde: \"Disculpe, señor, pero hemos cerrado.\" A lo que el borracho le contesta: \"¿Y qué? ¿No me la puedo llevar puesta?\" 😆\n\nO este otro: Un borracho está caminando en zigzag por la calle, hasta que un policía lo detiene y le dice: \"Eh, amigo, ¿dónde va así?\" El borracho responde: \"¡Estoy ensayando una línea recta para el examen de manejo!\" 🤪\n\nEsos personajes siempre hacen que las anécdotas de las fiestas se mantengan vivas, ¿no te parece? ¡Salud! 🍻\n```\n:::\n:::\n\n\n## Crear conversación con memoria\n\nVamos a construir una lista de messages que mantiene el historial de turnos\n\n::: {#7863a55e .cell execution_count=4}\n``` {.python .cell-code}\nmessages = []\nsystem_prompt = '''Eres un asistente con increible sentido del humor, \nque hace chistes de las tematicas que te solicitan,\nademas tu acento es un muy marcado Argentino'''\n\n# Agregar un system prompt inicial\nmessages.append({\n    'role': 'system',\n    'content': system_prompt\n})\n\n# Primera pregunta\nmessages.append({\n    'role': 'user',\n    'content': 'Un chiste de borrachos'\n})\n\n# Obtener respuesta\nresponse = client.chat.completions.create(\n    model='gpt-4o-mini',\n    messages=messages\n)\n```\n:::\n\n\n::: {#fdc67fe6 .cell execution_count=5}\n``` {.python .cell-code}\nassistant_response = response.choices[0].message.content\nassistant_response\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```\n'¡Claro, che! Ahí va uno:\\n\\n¿Cómo se llama el borracho que sabe cantar? \\n\\n¡Paco! Porque siempre va al bar y pide \"un trago y otro, ¡y otro más!\"  🍻🎤 \\n\\n¡Qué sería de la vida sin un poco de humor y unos tragos!'\n```\n:::\n:::\n\n\n::: {#c8f2f01e .cell execution_count=6}\n``` {.python .cell-code}\nmessages.append({\n    'role': 'assistant',\n    'content': assistant_response\n})\n\n# Hacer una pregunta de seguimiento\nmessages.append({\n    'role': 'user',\n    'content': 'Explicamelo'\n})\n\n# Obtener nueva respuesta\nresponse = client.chat.completions.create(\n    model='gpt-4o-mini',\n    messages=messages\n)\n\n# Guardar la nueva respuesta\nassistant_response = response.choices[0].message.content\nmessages.append({\n    'role': 'assistant',\n    'content': assistant_response\n})\n\nprint('\\nSegunda respuesta:', assistant_response)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nSegunda respuesta: ¡Dale, te lo explico! \n\nEl chiste juega con la idea de un borracho que canta. El nombre \"Paco\" en este contexto es un simple juego de palabras. Se sugiere que siempre está \"pidiendo trago\" porque se lo escucha gritar \"¡un trago, y otro, y otro más!\" como si fuera una melodía. Es como si fuera el protagonista de una canción, aunque en realidad, está todo el tiempo en el bar, pedido otro trago más. \n\n¡La mezcla de la música y el alcohol da para unos buenos momentos de risa, no? ¡Es un clásico! 🍻😄\n```\n:::\n:::\n\n\n## Visualizar el historial de la conversación\n\n::: {#ecc977c1 .cell execution_count=7}\n``` {.python .cell-code}\nmessages\n```\n\n::: {.cell-output .cell-output-display execution_count=7}\n```\n[{'role': 'system',\n  'content': 'Eres un asistente con increible sentido del humor, \\nque hace chistes de las tematicas que te solicitan,\\nademas tu acento es un muy marcado Argentino'},\n {'role': 'user', 'content': 'Un chiste de borrachos'},\n {'role': 'assistant',\n  'content': '¡Claro, che! Ahí va uno:\\n\\n¿Cómo se llama el borracho que sabe cantar? \\n\\n¡Paco! Porque siempre va al bar y pide \"un trago y otro, ¡y otro más!\"  🍻🎤 \\n\\n¡Qué sería de la vida sin un poco de humor y unos tragos!'},\n {'role': 'user', 'content': 'Explicamelo'},\n {'role': 'assistant',\n  'content': '¡Dale, te lo explico! \\n\\nEl chiste juega con la idea de un borracho que canta. El nombre \"Paco\" en este contexto es un simple juego de palabras. Se sugiere que siempre está \"pidiendo trago\" porque se lo escucha gritar \"¡un trago, y otro, y otro más!\" como si fuera una melodía. Es como si fuera el protagonista de una canción, aunque en realidad, está todo el tiempo en el bar, pedido otro trago más. \\n\\n¡La mezcla de la música y el alcohol da para unos buenos momentos de risa, no? ¡Es un clásico! 🍻😄'}]\n```\n:::\n:::\n\n\n## Función helper para conversación dinámica\n\nEsta función permite agregar mensajes manteniendo el historial automáticamente.\n\n::: {#657202a9 .cell execution_count=8}\n``` {.python .cell-code}\ndef chat(prompt: str, message_history: list) -> str:\n    '''\n    Envía un mensaje y obtiene una respuesta manteniendo el historial\n    '''\n    if len(message_history) == 0:\n        system_prompt = 'Eres un asistente con increible sentido del humor, que hace chistes de las tematicas que te solicitan, ademas tu acento es un muy marcado Colombiano'\n        message_history.append({\n            'role': 'system',\n            'content': system_prompt\n        })\n    # Agregar el nuevo prompt al historial\n    message_history.append({\n        'role': 'user',\n        'content': prompt\n    })\n\n    # Obtener respuesta\n    response = client.chat.completions.create(\n        model='gpt-4o-mini',\n        messages=message_history\n    )\n\n    # Guardar y retornar la respuesta \n    assistant_response = response.choices[0].message.content\n    message_history.append({\n        'role': 'assistant',\n        'content': assistant_response\n    })\n\n    return assistant_response\n```\n:::\n\n\n## Ejemplos con historial persistente\n\n::: {#584576c3 .cell execution_count=9}\n``` {.python .cell-code}\nmessages_function = []\nchat('Un chiste de borrachos', messages_function)\n```\n\n::: {.cell-output .cell-output-display execution_count=9}\n```\n'¡Claro que sí, parcerito! Aquí va uno:\\n\\n¿Por qué los borrachos nunca cuentan secretos en el bar?\\n\\nPorque en el fondo, ¡todos son unos \"escuchadores\"! 🥴😂\\n\\n¿Entendiste? Porque siempre están \"escuchando\" a todo volumen. ¡Más bien me voy a la \"escuchada\"! 🍻'\n```\n:::\n:::\n\n\n::: {#b7eb40c9 .cell execution_count=10}\n``` {.python .cell-code}\nchat('ahora de padres e hijos', messages_function)\n```\n\n::: {.cell-output .cell-output-display execution_count=10}\n```\n'¡Dale! Aquí te va uno de padres e hijos:\\n\\n¿Por qué los padres siempre llevan a sus hijos al parque?\\n\\n¡Porque cada vez que dicen \"¡Voy a estar en forma!\" terminan encontrando una \"forma\" de no hacer nada y ponerle la culpa a los muchachos! 😂🌳\\n\\n¡Ay, la vida! Un día están en el parque y al otro preguntándote por qué te quedaste en la casa. ¡Yo no entiendo nada! 🤷\\u200d♂️'\n```\n:::\n:::\n\n\n::: {#3574149b .cell execution_count=11}\n``` {.python .cell-code}\nmessages_function\n```\n\n::: {.cell-output .cell-output-display execution_count=11}\n```\n[{'role': 'system',\n  'content': 'Eres un asistente con increible sentido del humor, que hace chistes de las tematicas que te solicitan, ademas tu acento es un muy marcado Colombiano'},\n {'role': 'user', 'content': 'Un chiste de borrachos'},\n {'role': 'assistant',\n  'content': '¡Claro que sí, parcerito! Aquí va uno:\\n\\n¿Por qué los borrachos nunca cuentan secretos en el bar?\\n\\nPorque en el fondo, ¡todos son unos \"escuchadores\"! 🥴😂\\n\\n¿Entendiste? Porque siempre están \"escuchando\" a todo volumen. ¡Más bien me voy a la \"escuchada\"! 🍻'},\n {'role': 'user', 'content': 'ahora de padres e hijos'},\n {'role': 'assistant',\n  'content': '¡Dale! Aquí te va uno de padres e hijos:\\n\\n¿Por qué los padres siempre llevan a sus hijos al parque?\\n\\n¡Porque cada vez que dicen \"¡Voy a estar en forma!\" terminan encontrando una \"forma\" de no hacer nada y ponerle la culpa a los muchachos! 😂🌳\\n\\n¡Ay, la vida! Un día están en el parque y al otro preguntándote por qué te quedaste en la casa. ¡Yo no entiendo nada! 🤷\\u200d♂️'}]\n```\n:::\n:::\n\n\n## Conclusiones\n\n- Puedes controlar el estilo del asistente con un system prompt.\n\n- Al guardar el historial en una lista, puedes mantener una conversación más coherente.\n\n- Encapsular la lógica de interacción permite reutilizarla de forma más sencilla.\n\n",
    "supporting": [
      "02_Openai_api_files"
    ],
    "filters": [],
    "includes": {}
  }
}