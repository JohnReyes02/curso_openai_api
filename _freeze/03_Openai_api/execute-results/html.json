{
  "hash": "056fccf89fafe10605a3b993f783a920",
  "result": {
    "engine": "jupyter",
    "markdown": "# Uso de Hiperparámetros\n\n## Objetivo\n\nEn este tutorial aprenderás a:\n\n- \n\n\n## Configuración inicial\n\nImportamos las librerías necesarias, cargamos la API key desde un .env y creamos el cliente de OpenAI.\n\n::: {#decccf52 .cell execution_count=2}\n``` {.python .cell-code}\nfrom openai import OpenAI\nimport os\nfrom IPython.display import display, Markdown\n```\n:::\n\n\n::: {#bb906741 .cell execution_count=3}\n``` {.python .cell-code}\nfrom dotenv import load_dotenv\n\nload_dotenv()\napi_key = os.getenv('OPENAI_API_KEY')\n\nclient = OpenAI(api_key=api_key)\n```\n:::\n\n\n## Temperature (float: 0-2)\n\nControla la aleatoriedad de las respuestas. Valores más altos producen respuestas más creativas y diversas.\n\n- 0.0: Respuestas consistentes y determinísticas\n- 0.5: Balance entre creatividad y consistencia\n- 1.0: Mayor creatividad y variabilidad\n- 2.0 Máxima aleatoriedad\n\n::: {#610064fe .cell execution_count=4}\n``` {.python .cell-code}\nprompt = 'las nubes estan algo grises verdad?'\n# Temperatura baja (0.2)\nresponse_conservador = client.chat.completions.create(\n    model='gpt-4o-mini',\n    messages=[{\n        'role': 'user',\n        'content': prompt\n    }],\n    temperature=0.2\n)\n```\n:::\n\n\nMiramos la respuesta conservadora:\n\n::: {#ccd450f1 .cell execution_count=5}\n``` {.python .cell-code}\ndisplay(Markdown(response_conservador.choices[0].message.content))\n```\n\n::: {.cell-output .cell-output-display .cell-output-markdown}\nSí, parece que las nubes están grises. Esto suele indicar que pueden estar cargadas de humedad y que podría llover pronto. ¿Estás esperando algún tipo de clima en particular?\n:::\n:::\n\n\n::: {#5be7f35c .cell execution_count=6}\n``` {.python .cell-code}\n# Temperatura alta (1.8)\nresponse_creativo = client.chat.completions.create(\n    model='gpt-4o-mini',\n    messages=[{\n        'role': 'user',\n        'content': prompt\n    }],\n    temperature=1.5\n)\n```\n:::\n\n\nMiremos ahora la respuesta creativa:\n\n::: {#7c5e8641 .cell execution_count=7}\n``` {.python .cell-code}\ndisplay(Markdown(response_creativo.choices[0].message.content))\n```\n\n::: {.cell-output .cell-output-display .cell-output-markdown}\nSí, parecen un poco grises. Cuando las nubes están grises, a menudo significa que pueden estar más cargadas de agua, lo que podría indicar que hay posibilidades de lluvia. ¿Estás esperando alguna precipitación?\n:::\n:::\n\n\nProbemos ahora con otro ejemplo\n\n::: {#681c4388 .cell execution_count=8}\n``` {.python .cell-code}\nprompt = 'Genera un eslogan para una cafeteria en la luna'\n# Temperatura baja (0.2)\nresponse_conservador = client.chat.completions.create(\n    model='gpt-4o-mini',\n    messages=[{\n        'role': 'user',\n        'content': prompt\n    }],\n    temperature=0.2\n)\n\n# Temperatura alta (1.8)\nresponse_creativo = client.chat.completions.create(\n    model='gpt-4o-mini',\n    messages=[{\n        'role': 'user',\n        'content': prompt\n    }],\n    temperature=1.5\n)\n```\n:::\n\n\nMiramos la respuesta conservadora:\n\n::: {#3cf66294 .cell execution_count=9}\n``` {.python .cell-code}\ndisplay(Markdown(response_conservador.choices[0].message.content))\n```\n\n::: {.cell-output .cell-output-display .cell-output-markdown}\n\"¡Sabor que te eleva! Disfruta un café fuera de este mundo en nuestra cafetería lunar.\"\n:::\n:::\n\n\nMiremos ahora la respuesta creativa:\n\n::: {#7cfe8f91 .cell execution_count=10}\n``` {.python .cell-code}\ndisplay(Markdown(response_creativo.choices[0].message.content))\n```\n\n::: {.cell-output .cell-output-display .cell-output-markdown}\n\"¡Saborea el universo en cada sorbo en tu cafetería lunar!\" 🌙☕️\n:::\n:::\n\n\n## max_tokens\n\n",
    "supporting": [
      "03_Openai_api_files"
    ],
    "filters": [],
    "includes": {}
  }
}